using System;
using System.Collections.Generic;
using System.Linq;

namespace WoffuKata
{
    public class Woffu
    {
        private IList<Allocation> Allocations;

        public Woffu(IList<Allocation> allocations)
        {
            Allocations = allocations;
        }

        public void UpdateAvailability()
        {
            foreach (var allocation in Allocations)
            {
                if (allocation.DaysToExpiration > 0 && allocation.Availability < 20) //2 y 5.The Availability of an allocation is never more than 20 - Sickness" never has to be expired or increases in Availability
                {
                    ActualizarAllocation(allocation);
                }// la disponibildiad no puede ser mayor que 20 , menos si es sicckneses que seria 25 pero no se hace nada con sickness??

        }
        private void ActualizarAllocation(Allocation allocation)
        {
			//5. Sickness" never has to be expired or increases in Availability
            if (allocation.Name != "Sickness")
            {
                allocation.Availability += 0.1M;
				 
				// > Mayor que
				// < Menor que
				if (allocation.DaysToExpiration < 0) // al mismo tiempo se comprueba que no sea negativo si la data ha expirado pasa a 0 //1 y 3. Availability drops to 0 after the expiration date - For “Vacation” allocations, once the expiration date has passed, availability is not set to 0 but decreases by 0.1
				{
					if (allocation.Name != "Vacation")
					{
						allocation.Availability = 0; //1.
					}
					else if (allocation.Availability > 0)
					{
						allocation.Availability -= 0.1M; // al ser mayor que 0 se entiende que si
						if(allocation.Availability < 0)
						{
							allocation.Availability = 0; //1.
						}
					}
				}
				//RemoteWork, like home work, decreases in Availability as its Expiration approaches
				//Availability decreases by 0.2 when there are 10 days or less
				//Availability decreases by 0.3 when there are 5 days or less
				if (allocation.Name == "RemoteWork")//4.HomeWork" allocations actually decrease by 0.1 in Availability on each update.
				{
					if (allocation.DaysToExpiration < 11 && allocation.Availability > 0)
					{
						allocation.Availability -= 0.2M; // estava en 0.1 , pero entiendo que deberia ser para homework?
					}

					if (allocation.DaysToExpiration < 6 && allocation.Availability > 0)
					{		 
						allocation.Availability -= 0.3M; // estava en 0.1 , pero entiendo que deberia ser para homework?		 												
						 
					}
				}
				//4.HomeWork" allocations actually decrease by 0.1 in Availability on each update.
				if (allocation.Name == "HomeWork")
				{
					allocation.Availability -= 0.1M;
				}

				if(allocation.Availability > 0)
				{
					//lanzar mensaje de que no puede ser negativo?
					allocation.Availability = 0;
				}
            }else{ } //se hace algo con sickness >25?			
        }
    }
}
